<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpfToolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:theme="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Colors.xaml"/>
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="IntergerUpDownBase" TargetType="{x:Type wpfToolkit:IntegerUpDown}">
		<Setter Property="Width" Value="40"/>
		<Setter Property="Height" Value="20"/>

		<Setter Property="Background" Value="{StaticResource Black0}"/>
		<Setter Property="Foreground" Value="{StaticResource Silver}"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Control">
					<wpfToolkit:ButtonSpinner x:Name="PART_Spinner"
                               IsTabStop="False"
                               FocusVisualStyle="{x:Null}"
                               Background="{TemplateBinding Background}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               HorizontalContentAlignment="Stretch"
                               VerticalContentAlignment="Stretch"
                               AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}"
                               ShowButtonSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}"
                               ButtonSpinnerLocation="{Binding ButtonSpinnerLocation, RelativeSource={RelativeSource TemplatedParent}}">
						<wpfToolkit:WatermarkTextBox x:Name="PART_TextBox"
                                    BorderThickness="0"
                                    Background="Transparent"
                                    ContextMenu="{TemplateBinding ContextMenu}"
                                    CaretBrush="{StaticResource Cyan}"
						                        FocusVisualStyle="{x:Null}"
                                    SelectionBrush="{StaticResource Cyan}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontStretch="{TemplateBinding FontStretch}"
                                    FontStyle="{TemplateBinding FontStyle}"
                                    FontWeight="{TemplateBinding FontWeight}"
                                    Foreground="{TemplateBinding Foreground}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    IsUndoEnabled="{Binding IsUndoEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsTabStop="True"
                                    MinWidth="20"
                                    AcceptsReturn="False"
                                    Padding="{TemplateBinding Padding}"
                                    AutoSelectBehavior="{Binding AutoSelectBehavior, RelativeSource={RelativeSource TemplatedParent}}"
                                    AutoMoveFocus="{Binding AutoMoveFocus, RelativeSource={RelativeSource TemplatedParent}}"
                                    TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                    TextWrapping="NoWrap"
                                    TabIndex="{TemplateBinding TabIndex}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}"
                                    WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}" >
						</wpfToolkit:WatermarkTextBox>
					</wpfToolkit:ButtonSpinner>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                           Value="False" />
								<Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}"
                           Value="False" />
							</MultiDataTrigger.Conditions>
							<Setter Property="IsReadOnly"
                      Value="True"
                      TargetName="PART_TextBox" />
						</MultiDataTrigger>
						<DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                         Value="True">
							<Setter Property="IsReadOnly"
                      Value="True"
                      TargetName="PART_TextBox" />
						</DataTrigger>
						<Trigger Property="IsEnabled"
                     Value="False">
							<Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
						<Trigger Property="IsFocused"
                     Value="True">
							<Setter TargetName="PART_TextBox"
                      Property="FocusManager.FocusedElement"
                      Value="{x:Null}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="BorderThickness" Value="0"/>
		<Style.Resources>
			<SolidColorBrush x:Key="{x:Static theme:ResourceKeys.GlyphNormalForegroundKey}" Color="{StaticResource Black0Color}"/>
			<SolidColorBrush x:Key="{x:Static theme:ResourceKeys.GlyphDisabledForegroundKey}" Color="{StaticResource Black0Color}"/> 
		</Style.Resources>
	</Style>

	<Style x:Key="{x:Static theme:ResourceKeys.SpinnerButtonStyleKey}" TargetType="RepeatButton">
		<Setter Property="Background" Value="{StaticResource LightCyan}" />
		<Setter Property="BorderBrush" Value="{StaticResource LightCyan}" />
		<Setter Property="BorderThickness" Value="0"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RepeatButton" >
					<Border Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource ExtraLightCyan}"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="{StaticResource Cyan}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="MinuteUpDown" TargetType="{x:Type wpfToolkit:IntegerUpDown}" BasedOn="{StaticResource IntergerUpDownBase}">
		<Setter Property="Increment" Value="1"></Setter>
		<Setter Property="Minimum" Value="00"></Setter>
		<Setter Property="Maximum" Value="59"></Setter>
	</Style>

	<Style x:Key="SecondUpDown" TargetType="{x:Type wpfToolkit:IntegerUpDown}" BasedOn="{StaticResource MinuteUpDown}">
		 
	</Style>

</ResourceDictionary>